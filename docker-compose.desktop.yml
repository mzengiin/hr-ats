version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: cvflow_db
      POSTGRES_USER: cvflow_user
      POSTGRES_PASSWORD: cvflow_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cvflow_user -d cvflow_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - cvflow-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://cvflow_user:cvflow_password@db:5432/cvflow_db
      SECRET_KEY: your-super-secret-key-change-in-production
      DEBUG: "true"
      PYTHONUNBUFFERED: "1"
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/__pycache__
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped
    networks:
      - cvflow-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8001/api/v1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    command: npm start
    restart: unless-stopped
    networks:
      - cvflow-network

volumes:
  postgres_data:
    driver: local

networks:
  cvflow-network:
    driver: bridge
